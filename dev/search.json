[{"path":[]},{"path":"https://important.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://important.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://important.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://important.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://important.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement max@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://important.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://important.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://important.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://important.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://important.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://important.tidymodels.org/dev/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://important.tidymodels.org/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 important authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://important.tidymodels.org/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Max Kuhn. Author, maintainer. . Copyright holder, funder.","code":""},{"path":"https://important.tidymodels.org/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kuhn M (2025). important: Supervised Feature Selection. R package version 0.2.0.9000, https://important.tidymodels.org/.","code":"@Manual{,   title = {important: Supervised Feature Selection},   author = {Max Kuhn},   year = {2025},   note = {R package version 0.2.0.9000},   url = {https://important.tidymodels.org/}, }"},{"path":"https://important.tidymodels.org/dev/index.html","id":"important","dir":"","previous_headings":"","what":"Supervised Feature Selection","title":"Supervised Feature Selection","text":"important package succinct interface obtaining estimates predictor importance tidymodels objects. main features: performance metrics yardstick package can used. Importance can calculated either original columns level derived model terms created feature engineering. computations loop across permutation iterations predictors columns easily parallelized. results returned tidy format. also recipe steps supervised feature selection: step_predictors_retain() can filter predictors using single conditional statement (e.g., absolute correlation outcome > 0.75, etc). step_predictors_best() can retain important predictors outcome using single scoring function. step_predictors_desirability() retains important predictors outcome using multiple scoring functions, blended using desirability functions. latter two steps can tuned proportion predictors retained.","code":""},{"path":"https://important.tidymodels.org/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Supervised Feature Selection","text":"can install development version important GitHub :","code":"install.packages(\"devtools\") # or pak::pak(\"tidymodels/important\")"},{"path":"https://important.tidymodels.org/dev/index.html","id":"do-we-really-need-another-package-that-computes-variable-importances","dir":"","previous_headings":"","what":"Do we really need another package that computes variable importances?","title":"Supervised Feature Selection","text":"main reason making important censored regression models. tidymodels released tools fitting qualifying models censored outcomes. included dynamic performance metrics evaluated different time points. substantial change us, even challenging add packages.","code":""},{"path":"https://important.tidymodels.org/dev/index.html","id":"variable-importance-example","dir":"","previous_headings":"","what":"Variable importance Example","title":"Supervised Feature Selection","text":"Let’s look analysis models food delivery times. outcome time order placed delivery (data complete - censoring). model terms order day/time, distance restaurant, items contained order. Exploratory data analysis shows several nonlinear trends data interactions trends. ’ll load tidymodels important packages get started. data split training, validation, testing sets. model uses recipe spline terms hour distances. nonlinear trend time order changes day, added interactions two sets terms. Finally, simple linear regression model used estimation: First, let’s capture effect individual model terms. terms derived features models, dummy variables, spline terms, interaction columns, etc. Using mean absolute error metric interest, top 5 features : Two notes: importance scores ratio mean change performance associated standard error. mean value always increasing importance, matter direction preferred specific metric(s). can run parallel loading future package specifying parallel backend using plan() function. plot method can help visualize results:  Since spline terms interactions hour column, might care importance term hour_06 (sixth spline feature). aggregate, might want know effect original predictor columns. type option used purpose:","code":"data(deliveries, package = \"modeldata\")  set.seed(991) delivery_split <- initial_validation_split(deliveries, prop = c(0.6, 0.2), strata = time_to_delivery) delivery_train <- training(delivery_split) delivery_rec <-    recipe(time_to_delivery ~ ., data = delivery_train) |>    step_dummy(all_factor_predictors()) |>    step_zv(all_predictors()) |>    step_spline_natural(hour, distance, deg_free = 10) |>    step_interact(~ starts_with(\"hour_\"):starts_with(\"day_\"))  lm_wflow <- workflow(delivery_rec, linear_reg()) lm_fit <- fit(lm_wflow, delivery_train) set.seed(382) lm_deriv_imp <-    importance_perm(     lm_fit,     data = delivery_train,     metrics = metric_set(mae, rsq),     times = 50,     type = \"derived\"   ) lm_deriv_imp #> # A tibble: 226 × 6 #>    .metric predictor             n  mean std_err importance #>    <chr>   <chr>             <int> <dbl>   <dbl>      <dbl> #>  1 rsq     distance_10          50 0.528 0.00655       80.5 #>  2 mae     day_Sat              50 1.09  0.0150        72.2 #>  3 mae     distance_10          50 2.20  0.0323        68.2 #>  4 mae     day_Fri              50 0.877 0.0140        62.7 #>  5 mae     day_Thu              50 0.638 0.0130        49.0 #>  6 mae     distance_09          50 0.740 0.0156        47.3 #>  7 mae     hour_08              50 0.520 0.0136        38.3 #>  8 rsq     day_Sat              50 0.118 0.00327       36.2 #>  9 rsq     hour_06_x_day_Sat    50 0.146 0.00410       35.7 #> 10 mae     hour_08_x_day_Sat    50 0.604 0.0173        34.9 #> # ℹ 216 more rows lm_deriv_imp |>      filter(.metric == \"mae\") |>      slice_max(importance, n = 5) #> # A tibble: 5 × 6 #>   .metric predictor       n  mean std_err importance #>   <chr>   <chr>       <int> <dbl>   <dbl>      <dbl> #> 1 mae     day_Sat        50 1.09   0.0150       72.2 #> 2 mae     distance_10    50 2.20   0.0323       68.2 #> 3 mae     day_Fri        50 0.877  0.0140       62.7 #> 4 mae     day_Thu        50 0.638  0.0130       49.0 #> 5 mae     distance_09    50 0.740  0.0156       47.3 autoplot(lm_deriv_imp, top = 50) set.seed(382) lm_orig_imp <-      importance_perm(         lm_fit,         data = delivery_train,         metrics = metric_set(mae, rsq),         times = 50,         type = \"original\"     )  # Top five:  lm_orig_imp |>      filter(.metric == \"mae\") |>      slice_max(importance, n = 5) #> # A tibble: 5 × 6 #>   .metric predictor     n   mean std_err importance #>   <chr>   <chr>     <int>  <dbl>   <dbl>      <dbl> #> 1 mae     hour         50 4.10    0.0320     128.   #> 2 mae     day          50 1.91    0.0214      89.1  #> 3 mae     distance     50 1.46    0.0222      66.0  #> 4 mae     item_24      50 0.0489  0.0119       4.11 #> 5 mae     item_03      50 0.0337  0.0114       2.95 autoplot(lm_orig_imp)"},{"path":"https://important.tidymodels.org/dev/index.html","id":"supervised-feature-selection-example","dir":"","previous_headings":"","what":"Supervised Feature Selection Example","title":"Supervised Feature Selection","text":"Using dataset, let’s illustrate common tool filtering predictors: using random forest importance scores. important can use “scoring functions” filtro package. can supply one, proportion predictors retain: list possible scores contained help page recipe steps. Note changed selectors step_spline_natural() use any_of() instead specific names. step downstream filtering steps generalized failure columns removed. Using any_of() selects two columns still remain data. removed? example shows basic usage recipe. practice, probably things differently: step included workflow coupled model. good idea optimize much selection done setting prop_terms = tune() step using one tuning functions find good proportion. Inappropriate use selection steps occurs used data split outside resampling step.","code":"set.seed(491) selection_rec <-      recipe(time_to_delivery ~ ., data = delivery_train) |>      step_predictor_best(all_predictors(), score = \"imp_rf\", prop_terms = 1/4) |>      step_dummy(all_factor_predictors()) |>      step_zv(all_predictors()) |>      step_spline_natural(any_of(c(\"hour\", \"distance\")), deg_free = 10) |>      step_interact(~ starts_with(\"hour_\"):starts_with(\"day_\")) |>      prep() selection_rec #>  #> ── Recipe ────────────────────────────────────────────────────────────────────── #>  #> ── Inputs #> Number of variables by role #> outcome:    1 #> predictor: 30 #>  #> ── Training information #> Training data contained 6004 data points and no incomplete rows. #>  #> ── Operations #> • Feature selection via `imp_rf` on: item_03 item_04, ... | Trained #> • Dummy variables from: day | Trained #> • Zero variance filter removed: <none> | Trained #> • Natural spline expansion: hour distance | Trained #> • Interactions with: hour_01:day_Tue hour_01:day_Wed, ... | Trained selection_res <-      tidy(selection_rec, number = 1) |>      arrange(desc(score))  selection_res #> # A tibble: 30 × 4 #>    terms    removed   score id                   #>    <chr>    <lgl>     <dbl> <chr>                #>  1 hour     FALSE   48.5    predictor_best_rCIMa #>  2 day      FALSE   13.5    predictor_best_rCIMa #>  3 distance FALSE   13.3    predictor_best_rCIMa #>  4 item_10  FALSE    1.18   predictor_best_rCIMa #>  5 item_01  FALSE    1.01   predictor_best_rCIMa #>  6 item_24  FALSE    0.160  predictor_best_rCIMa #>  7 item_02  FALSE    0.0676 predictor_best_rCIMa #>  8 item_26  TRUE     0.0666 predictor_best_rCIMa #>  9 item_03  TRUE     0.0593 predictor_best_rCIMa #> 10 item_22  TRUE     0.0565 predictor_best_rCIMa #> # ℹ 20 more rows  mean(selection_res$removed) #> [1] 0.7666667"},{"path":"https://important.tidymodels.org/dev/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Supervised Feature Selection","text":"Please note important project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://important.tidymodels.org/dev/reference/autoplot.importance_perm.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize importance scores — autoplot.importance_perm","title":"Visualize importance scores — autoplot.importance_perm","text":"Visualize importance scores","code":""},{"path":"https://important.tidymodels.org/dev/reference/autoplot.importance_perm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize importance scores — autoplot.importance_perm","text":"","code":"# S3 method for class 'importance_perm' autoplot(   object,   top = Inf,   metric = NULL,   eval_time = NULL,   type = \"importance\",   std_errs = stats::qnorm(0.95),   ... )"},{"path":"https://important.tidymodels.org/dev/reference/autoplot.importance_perm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize importance scores — autoplot.importance_perm","text":"object tibble results importance_perm(). top integer many terms show. define importance multiple metrics, rankings predictors computed across metrics average rank used. case tied rankings, ties included. metric character vector NULL metric plot. default, metrics shown via facets. Possible options entries .metric column object. eval_time censored regression models, vector time points survival probability estimated. type character value. default \"importance\" shows overall signal--noise ration (.e., mean divided standard error). Alternatively, \"difference\" shows mean difference value standard error bounds. std_errs number standard errors plot (type = \"difference\"). ... used.","code":""},{"path":"https://important.tidymodels.org/dev/reference/autoplot.importance_perm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize importance scores — autoplot.importance_perm","text":"ggplot2 object.","code":""},{"path":"https://important.tidymodels.org/dev/reference/autoplot.importance_perm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize importance scores — autoplot.importance_perm","text":"","code":"# Pre-computed results. See code at system.file(\"make_imp_example.R\", package = \"important\") #> [1] \"/home/runner/work/_temp/Library/important/make_imp_example.R\"  # Load the results load(system.file(\"imp_examples.RData\", package = \"important\"))  # A classification model with two classes and highly correlated predictors. # To preprocess them, PCA feature extraction is used. # # Let’s first view the importance in terms of the original predictor set # using 50 permutations:  imp_orig #> # A tibble: 390 × 6 #>    .metric     predictor     n    mean std_err importance #>    <chr>       <chr>     <int>   <dbl>   <dbl>      <dbl> #>  1 roc_auc     Genotype     50 0.108   0.00442      24.4  #>  2 brier_class Genotype     50 0.0353  0.00151      23.3  #>  3 accuracy    Genotype     50 0.0568  0.00314      18.1  #>  4 roc_auc     Eotaxin_3    50 0.0568  0.00392      14.5  #>  5 roc_auc     age          50 0.0622  0.00463      13.4  #>  6 brier_class age          50 0.0190  0.00143      13.3  #>  7 brier_class Eotaxin_3    50 0.0132  0.00130      10.2  #>  8 accuracy    age          50 0.0183  0.00275       6.67 #>  9 roc_auc     male         50 0.0201  0.00352       5.72 #> 10 brier_class Resistin     50 0.00535 0.00115       4.65 #> # ℹ 380 more rows  autoplot(imp_orig, top = 10)   # Now assess the importance in terms of the PCA components  imp_derv #> # A tibble: 36 × 6 #>    .metric     predictor         n   mean std_err importance #>    <chr>       <chr>         <int>  <dbl>   <dbl>      <dbl> #>  1 brier_class Genotype_E3E4    50 0.181  0.00332       54.5 #>  2 brier_class Genotype_E3E3    50 0.132  0.00293       45.0 #>  3 roc_auc     Genotype_E3E4    50 0.238  0.00632       37.6 #>  4 accuracy    Genotype_E3E4    50 0.140  0.00427       32.9 #>  5 brier_class Genotype_E2E3    50 0.0605 0.00196       30.9 #>  6 accuracy    Genotype_E3E3    50 0.0902 0.00364       24.7 #>  7 roc_auc     Genotype_E4E4    50 0.0841 0.00349       24.1 #>  8 roc_auc     Genotype_E3E3    50 0.106  0.00472       22.5 #>  9 brier_class Genotype_E4E4    50 0.0370 0.00166       22.3 #> 10 accuracy    Genotype_E2E3    50 0.0497 0.00260       19.1 #> # ℹ 26 more rows  autoplot(imp_derv)  autoplot(imp_derv, metric = \"brier_class\", type = \"difference\")"},{"path":"https://important.tidymodels.org/dev/reference/importance_perm.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute permutation-based predictor importance — importance_perm","title":"Compute permutation-based predictor importance — importance_perm","text":"importance_perm() computes model-agnostic variable importance scores permuting individual predictors (one time) measuring worse model performance becomes.","code":""},{"path":"https://important.tidymodels.org/dev/reference/importance_perm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute permutation-based predictor importance — importance_perm","text":"","code":"importance_perm(   wflow,   data,   metrics = NULL,   type = \"original\",   size = 500,   times = 10,   eval_time = NULL,   event_level = \"first\" )"},{"path":"https://important.tidymodels.org/dev/reference/importance_perm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute permutation-based predictor importance — importance_perm","text":"wflow fitted workflows::workflow(). data data frame data passed workflows::fit.workflow(), including outcome case weights (). metrics yardstick::metric_set() NULL. type character string level predictors compute. value \"original\" (default) return values representation data. Using \"derived\" compute derived features/predictors, dummy indicator columns, etc. size many data points predict permutation iteration. times many iterations repeat calculations. eval_time censored regression models, vector time points survival probability estimated. needed dynamic metric used, Brier score area ROC curve. event_level single string. Either \"first\" \"second\" specify level truth consider \"event\". argument applicable estimator = \"binary\".","code":""},{"path":"https://important.tidymodels.org/dev/reference/importance_perm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute permutation-based predictor importance — importance_perm","text":"tibble extra classes \"importance_perm\" either \"original_importance_perm\" \"derived_importance_perm\". columns : .metric name performance metric: predictor: predictor n: number usable results (times) mean: average differences performance. metric, larger values indicate worse performance (.e., higher importance). std_err: standard error differences. importance: mean divided standard error. censored regression models, additional .eval_time column may also included (depending metric requested).","code":""},{"path":"https://important.tidymodels.org/dev/reference/importance_perm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute permutation-based predictor importance — importance_perm","text":"function can compute importance two different levels. \"original\" predictors unaltered columns source data set. example, categorical predictor used linear regression, original predictor factor column. \"Derived\" predictors final versions given model. categorical predictor example, derived versions binary indicator variables produced factor version. can make difference pre-processing/feature engineering used. can help us understand predictor can important Importance scores computed predictor (specified level) performance metric. metric specified, defaults used: Classification: yardstick::brier_class(), yardstick::roc_auc(), yardstick::accuracy(). Regression:  yardstick::rmse() yardstick::rsq(). Censored regression: yardstick::brier_survival() censored data, importance computed evaluation time (dynamic metric specified). default, parallelism used process models tune; opt-.","code":""},{"path":"https://important.tidymodels.org/dev/reference/importance_perm.html","id":"using-future-to-parallel-process","dir":"Reference","previous_headings":"","what":"Using future to parallel process","title":"Compute permutation-based predictor importance — importance_perm","text":"install package choose flavor parallelism using plan function. allows specify number worker processes specific technology use. example, can use:   work conducted simultaneously (unless exception; see section ). See future::plan() possible options multisession.","code":"library(future)    plan(multisession, workers = 4)"},{"path":"https://important.tidymodels.org/dev/reference/importance_perm.html","id":"using-mirai-to-parallel-process","dir":"Reference","previous_headings":"","what":"Using mirai  to parallel process","title":"Compute permutation-based predictor importance — importance_perm","text":"configure parallel processing mirai, use mirai::daemons() function. first argument, n, determines number parallel workers. Using daemons(0) reverts sequential processing. arguments url remote used set launch parallel processes network distributed computing. See mirai::daemons() documentation details.","code":""},{"path":"https://important.tidymodels.org/dev/reference/importance_perm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute permutation-based predictor importance — importance_perm","text":"","code":"if (rlang::is_installed(c(\"modeldata\", \"recipes\", \"workflows\", \"parsnip\"))) {   library(modeldata)   library(recipes)   library(workflows)   library(dplyr)   library(parsnip)    set.seed(12)   dat_tr <-     sim_logistic(250, ~ .1 + 2 * A - 3 * B + 1 * A *B, corr = .7) |>     dplyr::bind_cols(sim_noise(250, num_vars = 10))    rec <-     recipe(class ~ ., data = dat_tr) |>     step_interact(~ A:B) |>     step_normalize(all_numeric_predictors()) |>     step_pca(contains(\"noise\"), num_comp = 5)    lr_wflow <- workflow(rec, logistic_reg())   lr_fit <- fit(lr_wflow, dat_tr)    set.seed(39)   orig_res <- importance_perm(lr_fit, data = dat_tr, type = \"original\",                               size = 100, times = 3)   orig_res    set.seed(39)   deriv_res <- importance_perm(lr_fit, data = dat_tr, type = \"derived\",                                size = 100, times = 3)   deriv_res } #>  #> Attaching package: ‘modeldata’ #> The following object is masked from ‘package:datasets’: #>  #>     penguins #> # A tibble: 24 × 6 #>    .metric     predictor     n    mean std_err importance #>    <chr>       <chr>     <int>   <dbl>   <dbl>      <dbl> #>  1 accuracy    B             3  0.207  0.00333     62.0   #>  2 brier_class B             3  0.165  0.0132      12.5   #>  3 roc_auc     B             3  0.229  0.0191      12.0   #>  4 brier_class A             3  0.127  0.0226       5.64  #>  5 roc_auc     A             3  0.153  0.0402       3.81  #>  6 accuracy    A             3  0.16   0.0451       3.55  #>  7 brier_class A_x_B         3  0.0328 0.0128       2.56  #>  8 roc_auc     A_x_B         3  0.0653 0.0287       2.28  #>  9 accuracy    A_x_B         3  0.07   0.0351       1.99  #> 10 accuracy    PC1           3 -0.03   0.0436      -0.688 #> # ℹ 14 more rows"},{"path":"https://important.tidymodels.org/dev/reference/important-package.html","id":null,"dir":"Reference","previous_headings":"","what":"important: Supervised Feature Selection — important-package","title":"important: Supervised Feature Selection — important-package","text":"Interfaces choosing important predictors supervised regression, classification, censored regression models. Permuted importance scores (Biecek Burzykowski (2021) doi:10.1201/9780429027192 ) can computed 'tidymodels' model fits.","code":""},{"path":[]},{"path":"https://important.tidymodels.org/dev/reference/important-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"important: Supervised Feature Selection — important-package","text":"Maintainer: Max Kuhn max@posit.co (ORCID) contributors: Posit Software, PBC (03wc8by49) [copyright holder, funder]","code":""},{"path":"https://important.tidymodels.org/dev/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. generics augment, required_pkgs ggplot2 autoplot","code":""},{"path":"https://important.tidymodels.org/dev/reference/required_pkgs.important.html","id":null,"dir":"Reference","previous_headings":"","what":"S3 methods for tracking which additional packages are needed for steps. — required_pkgs.step_predictor_best","title":"S3 methods for tracking which additional packages are needed for steps. — required_pkgs.step_predictor_best","text":"Recipe-adjacent packages always list required package steps can function properly within parallel processing schemes.","code":""},{"path":"https://important.tidymodels.org/dev/reference/required_pkgs.important.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S3 methods for tracking which additional packages are needed for steps. — required_pkgs.step_predictor_best","text":"","code":"# S3 method for class 'step_predictor_best' required_pkgs(x, ...)  # S3 method for class 'step_predictor_desirability' required_pkgs(x, ...)  # S3 method for class 'step_predictor_desirability' required_pkgs(x, ...)"},{"path":"https://important.tidymodels.org/dev/reference/required_pkgs.important.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"S3 methods for tracking which additional packages are needed for steps. — required_pkgs.step_predictor_best","text":"x recipe step","code":""},{"path":"https://important.tidymodels.org/dev/reference/required_pkgs.important.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S3 methods for tracking which additional packages are needed for steps. — required_pkgs.step_predictor_best","text":"character vector","code":""},{"path":"https://important.tidymodels.org/dev/reference/step_predictor_best.html","id":null,"dir":"Reference","previous_headings":"","what":"Supervised Feature Selection via Choosing the Top Predictors — step_predictor_best","title":"Supervised Feature Selection via Choosing the Top Predictors — step_predictor_best","text":"step_predictor_best() creates specification recipe step uses single scoring function measure much predictor related outcome value. step retains proportion important predictors, proportion can tuned.","code":""},{"path":"https://important.tidymodels.org/dev/reference/step_predictor_best.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Supervised Feature Selection via Choosing the Top Predictors — step_predictor_best","text":"","code":"step_predictor_best(   recipe,   ...,   score,   role = NA,   trained = FALSE,   prop_terms = 0.5,   update_prop = TRUE,   results = NULL,   removals = NULL,   skip = FALSE,   id = rand_id(\"predictor_best\") )"},{"path":"https://important.tidymodels.org/dev/reference/step_predictor_best.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Supervised Feature Selection via Choosing the Top Predictors — step_predictor_best","text":"recipe recipe object. step added sequence operations recipe. ... One selector functions choose variables step. See selections() details. score name single score function filtro package, \"imp_rf\" (filtro::score_imp_rf()), etc. See Details Examples sections . argument named used. role used step since new variables created. trained logical indicate quantities preprocessing estimated. prop_terms proportion predictors retained ordered overall desirability. value hardhat::tune() can also used. update_prop logical: prop_terms updated least one predictor retained? results data frame score desirability values predictor evaluated. values determined recipes::prep() called. removals character string contains names predictors removed. values determined recipes::prep() called. skip logical. step skipped recipe baked bake()? operations baked prep() run, operations may able conducted new data (e.g. processing outcome variable(s)). Care taken using skip = TRUE may affect computations subsequent operations. id character string unique step identify .","code":""},{"path":"https://important.tidymodels.org/dev/reference/step_predictor_best.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Supervised Feature Selection via Choosing the Top Predictors — step_predictor_best","text":"updated version recipe new step added sequence existing operations. tidy() step, tibble::tibble returned columns terms id: terms character, selectors variables selected removed id character, id step trained, additional columns included (see Details section).","code":""},{"path":[]},{"path":"https://important.tidymodels.org/dev/reference/step_predictor_best.html","id":"scoring-functions","dir":"Reference","previous_headings":"","what":"Scoring Functions","title":"Supervised Feature Selection via Choosing the Top Predictors — step_predictor_best","text":"version 0.2.0 filtro package, following score functions available: aov_fstat (documentation) aov_pval (documentation) cor_pearson (documentation) cor_spearman (documentation) gain_ratio (documentation) imp_rf (documentation) imp_rf_conditional (documentation) imp_rf_oblique (documentation) info_gain (documentation) roc_auc (documentation) sym_uncert (documentation) xtab_pval_chisq (documentation) xtab_pval_fisher (documentation) important notes: Scores p-values automatically transformed filtro format -log10(pvalue) p-value 0.1 converted 1.0. , use maximize() goal. scores also transformed data. example, correlation scores given recipe step absolute value format. See filtro documentation score. can use -line functions using base R functions. example, maximize(max(score_cor_spearman)). predictor computed scores, given \"fallback value\" prevent excluded reason. step can potentially remove columns data set. may cause issues subsequent steps recipe missing columns specifically referenced name. avoid , see advice Tips saving recipes filtering columns section recipes::selections.","code":""},{"path":"https://important.tidymodels.org/dev/reference/step_predictor_best.html","id":"ties","dir":"Reference","previous_headings":"","what":"Ties","title":"Supervised Feature Selection via Choosing the Top Predictors — step_predictor_best","text":"Note dplyr::slice_max() argument with_ties = TRUE  used select predictors. many ties overall desirability, proportion selected can larger value given prep_terms().","code":""},{"path":"https://important.tidymodels.org/dev/reference/step_predictor_best.html","id":"case-weights","dir":"Reference","previous_headings":"","what":"Case Weights","title":"Supervised Feature Selection via Choosing the Top Predictors — step_predictor_best","text":"Case weights can used scoring functions. learn , load filtro package check case_weights property score object (see Examples ). recipe, use one tidymodels case weight functions hardhat::importance_weights() hardhat::frequency_weights, assign correct data type vector case weights. recipe interpret class case weight (role). full example .","code":""},{"path":"https://important.tidymodels.org/dev/reference/step_predictor_best.html","id":"tidy-method","dir":"Reference","previous_headings":"","what":"Tidy method","title":"Supervised Feature Selection via Choosing the Top Predictors — step_predictor_best","text":"trained recipe, tidy() method return tibble columns terms (predictor names), id, columns estimated scores. score columns raw values, filled \"safe values\" transformed. additional local column called removed notes whether predictor failed filter removed step executed.","code":""},{"path":"https://important.tidymodels.org/dev/reference/step_predictor_best.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Supervised Feature Selection via Choosing the Top Predictors — step_predictor_best","text":"","code":"library(recipes)  rec <- recipe(mpg ~ ., data = mtcars) |>   step_predictor_best(     all_predictors(),     score = \"cor_spearman\"   )  prepped <- prep(rec)  bake(prepped, mtcars) #> # A tibble: 32 × 6 #>      cyl  disp    hp    wt    vs   mpg #>    <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1     6  160    110  2.62     0  21   #>  2     6  160    110  2.88     0  21   #>  3     4  108     93  2.32     1  22.8 #>  4     6  258    110  3.22     1  21.4 #>  5     8  360    175  3.44     0  18.7 #>  6     6  225    105  3.46     1  18.1 #>  7     8  360    245  3.57     0  14.3 #>  8     4  147.    62  3.19     1  24.4 #>  9     4  141.    95  3.15     1  22.8 #> 10     6  168.   123  3.44     1  19.2 #> # ℹ 22 more rows  tidy(prepped, 1) #> # A tibble: 10 × 4 #>    terms removed  score id                   #>    <chr> <lgl>    <dbl> <chr>                #>  1 cyl   FALSE   -0.911 predictor_best_lmrDj #>  2 disp  FALSE   -0.909 predictor_best_lmrDj #>  3 hp    FALSE   -0.895 predictor_best_lmrDj #>  4 drat  TRUE     0.651 predictor_best_lmrDj #>  5 wt    FALSE   -0.886 predictor_best_lmrDj #>  6 qsec  TRUE     0.467 predictor_best_lmrDj #>  7 vs    FALSE    0.707 predictor_best_lmrDj #>  8 am    TRUE     0.562 predictor_best_lmrDj #>  9 gear  TRUE     0.543 predictor_best_lmrDj #> 10 carb  TRUE    -0.657 predictor_best_lmrDj"},{"path":"https://important.tidymodels.org/dev/reference/step_predictor_desirability.html","id":null,"dir":"Reference","previous_headings":"","what":"Supervised Multivariate Feature Selection via Desirability Functions — step_predictor_desirability","title":"Supervised Multivariate Feature Selection via Desirability Functions — step_predictor_desirability","text":"step_predictor_desirability() creates specification recipe step uses one \"score\" functions measure much predictor related outcome value. scores combined composite value using user-specified desirability functions proportion desirable predictors retained.","code":""},{"path":"https://important.tidymodels.org/dev/reference/step_predictor_desirability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Supervised Multivariate Feature Selection via Desirability Functions — step_predictor_desirability","text":"","code":"step_predictor_desirability(   recipe,   ...,   score,   role = NA,   trained = FALSE,   prop_terms = 0.5,   update_prop = TRUE,   results = NULL,   removals = NULL,   skip = FALSE,   id = rand_id(\"predictor_desirability\") )"},{"path":"https://important.tidymodels.org/dev/reference/step_predictor_desirability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Supervised Multivariate Feature Selection via Desirability Functions — step_predictor_desirability","text":"recipe recipe object. step added sequence operations recipe. ... One selector functions choose variables step. See selections() details. score object produced desirability2::desirability() uses one score functions filtro package. See Details Examples sections . argument named used. role used step since new variables created. trained logical indicate quantities preprocessing estimated. prop_terms proportion predictors retained ordered overall desirability. value hardhat::tune() can also used. update_prop logical: prop_terms updated least one predictor retained? results data frame score desirability values predictor evaluated. values determined recipes::prep() called. removals character string contains names predictors removed. values determined recipes::prep() called. skip logical. step skipped recipe baked bake()? operations baked prep() run, operations may able conducted new data (e.g. processing outcome variable(s)). Care taken using skip = TRUE may affect computations subsequent operations. id character string unique step identify .","code":""},{"path":"https://important.tidymodels.org/dev/reference/step_predictor_desirability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Supervised Multivariate Feature Selection via Desirability Functions — step_predictor_desirability","text":"updated version recipe new step added sequence existing operations. tidy() step, tibble::tibble returned columns terms id: terms character, selectors variables selected removed id character, id step trained, additional columns included (see Details section).","code":""},{"path":"https://important.tidymodels.org/dev/reference/step_predictor_desirability.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Supervised Multivariate Feature Selection via Desirability Functions — step_predictor_desirability","text":"recipe step can compute one scores conduct simultaneous selection top predictors using desirability functions. functions , type goal, translate score's values scale [0, 1],  1.0 best result 0.0 unacceptable. score, overall desirability computed using geometric mean individual desirabilities. See examples desirability2::d_overall() desirability2::d_max(). define desirabilities, use desirability2::desirability() function define goals score pass recipe score argument.","code":""},{"path":"https://important.tidymodels.org/dev/reference/step_predictor_desirability.html","id":"scoring-functions","dir":"Reference","previous_headings":"","what":"Scoring Functions","title":"Supervised Multivariate Feature Selection via Desirability Functions — step_predictor_desirability","text":"version 0.2.0 filtro package, following score functions available: aov_fstat (documentation) aov_pval (documentation) cor_pearson (documentation) cor_spearman (documentation) gain_ratio (documentation) imp_rf (documentation) imp_rf_conditional (documentation) imp_rf_oblique (documentation) info_gain (documentation) roc_auc (documentation) sym_uncert (documentation) xtab_pval_chisq (documentation) xtab_pval_fisher (documentation) important notes: Scores p-values automatically transformed filtro format -log10(pvalue) p-value 0.1 converted 1.0. , use maximize() goal. scores also transformed data. example, correlation scores given recipe step absolute value format. See filtro documentation score. can use -line functions using base R functions. example, maximize(max(cor_spearman)). predictor computed scores, given \"fallback value\" prevent excluded reason. step can potentially remove columns data set. may cause issues subsequent steps recipe missing columns specifically referenced name. avoid , see advice Tips saving recipes filtering columns section recipes::selections.","code":""},{"path":"https://important.tidymodels.org/dev/reference/step_predictor_desirability.html","id":"ties","dir":"Reference","previous_headings":"","what":"Ties","title":"Supervised Multivariate Feature Selection via Desirability Functions — step_predictor_desirability","text":"Note dplyr::slice_max() argument with_ties = TRUE  used select predictors. many ties overall desirability, proportion selected can larger value given prep_terms().","code":""},{"path":"https://important.tidymodels.org/dev/reference/step_predictor_desirability.html","id":"case-weights","dir":"Reference","previous_headings":"","what":"Case Weights","title":"Supervised Multivariate Feature Selection via Desirability Functions — step_predictor_desirability","text":"Case weights can used scoring functions. learn , load filtro package check case_weights property score object (see Examples ). recipe, use one tidymodels case weight functions hardhat::importance_weights() hardhat::frequency_weights, assign correct data type vector case weights. recipe interpret class case weight (role). full example .","code":""},{"path":"https://important.tidymodels.org/dev/reference/step_predictor_desirability.html","id":"tidy-method","dir":"Reference","previous_headings":"","what":"Tidy method","title":"Supervised Multivariate Feature Selection via Desirability Functions — step_predictor_desirability","text":"trained recipe, tidy() method return tibble columns terms (predictor names), id, columns estimated scores, desirability results. score columns raw values, filled \"safe values\" transformed. desirability columns name scores additional prefix .d_. overall desirability column called .d_overall. additional local column called removed notes whether predictor failed filter removed step executed.","code":""},{"path":"https://important.tidymodels.org/dev/reference/step_predictor_desirability.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Supervised Multivariate Feature Selection via Desirability Functions — step_predictor_desirability","text":"Derringer, G. Suich, R. (1980), Simultaneous Optimization Several Response Variables. Journal Quality Technology, 12, 214-219. https://desirability2.tidymodels.org/reference/inline_desirability.html","code":""},{"path":[]},{"path":"https://important.tidymodels.org/dev/reference/step_predictor_desirability.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Supervised Multivariate Feature Selection via Desirability Functions — step_predictor_desirability","text":"","code":"library(recipes) library(desirability2)  if (rlang::is_installed(\"modeldata\")) {   # The `ad_data` has a binary outcome column (\"Class\") and mostly numeric   # predictors. For these, we score the predictors using an analysis of   # variance model where the predicor is the outcome and the outcome class   # defines the groups.   # There is also a single factor predictor (\"Genotype\") and we'll use   # Fisher's Exact test to score it. NOTE that for scores using hypothesis   # tests, the -log10(pvalue) is returned so that larger values are more   # important.    # The score_* objects here are from the filtro package. See Details above.   goals <-     desirability(       maximize(xtab_pval_fisher),       maximize(aov_pval)     )    example_data <- modeldata::ad_data   rec <-     recipe(Class ~ ., data = example_data) |>     step_predictor_desirability(       all_predictors(),       score = goals,       prop_terms = 1 / 2     )   rec    # Now evaluate the predictors and rank them via desirability:   prepped <- prep(rec)   prepped    # Use the tidy() method to get the results:   predictor_scores <- tidy(prepped, number = 1)   mean(predictor_scores$removed)   predictor_scores    # --------------------------------------------------------------------------    # Case-weight example: use the hardhat package to create the appropriate type   # of case weights. Here, we'll increase the weights for the minority class and   # add them to the data frame.    library(hardhat)    example_weights <- example_data   weights <- ifelse(example_data$Class == \"Impaired\", 5, 1)   example_weights$weights <- importance_weights(weights)    # To see if the scores can use case weights, load the filtro package and   # check the `case_weights` property:    library(filtro)    score_xtab_pval_fisher@case_weights   score_aov_pval@case_weights    # The recipe will automatically find the case weights and will   # not treat them as predictors.   rec_wts <-     recipe(Class ~ ., data = example_weights) |>     step_predictor_desirability(       all_predictors(),       score = goals,       prop_terms = 1 / 2     ) |>     prep()   rec_wts    predictor_scores_wts <-     tidy(rec_wts, number = 1) |>     select(terms, .d_overall_weighted = .d_overall)    library(dplyr)   library(ggplot2)    # The selection did not substantially change with these case weights   full_join(predictor_scores, predictor_scores_wts, by = \"terms\") |>     ggplot(aes(.d_overall, .d_overall_weighted)) +     geom_abline(col = \"darkgreen\", lty = 2) +     geom_point(alpha = 1 / 2) +     coord_fixed(ratio = 1) +     labs(x = \"Unweighted\", y = \"Class Weighted\") }"},{"path":"https://important.tidymodels.org/dev/reference/step_predictor_retain.html","id":null,"dir":"Reference","previous_headings":"","what":"Supervised Feature Selection via A Single Filter — step_predictor_retain","title":"Supervised Feature Selection via A Single Filter — step_predictor_retain","text":"step_predictor_retain() creates specification recipe step uses logical statement includes one scoring functions measure much predictor related outcome value. step retains predictors pass logical statement.","code":""},{"path":"https://important.tidymodels.org/dev/reference/step_predictor_retain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Supervised Feature Selection via A Single Filter — step_predictor_retain","text":"","code":"step_predictor_retain(   recipe,   ...,   score,   role = NA,   trained = FALSE,   results = NULL,   removals = NULL,   skip = FALSE,   id = rand_id(\"predictor_retain\") )"},{"path":"https://important.tidymodels.org/dev/reference/step_predictor_retain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Supervised Feature Selection via A Single Filter — step_predictor_retain","text":"recipe recipe object. step added sequence operations recipe. ... One selector functions choose variables step. See selections() details. score valid R expression produces logical result. equation can contain names one score functions filtro package, filtro::score_imp_rf(), filtro:: score_roc_auc(). See Details Examples sections . argument named used. role used step since new variables created. trained logical indicate quantities preprocessing estimated. results data frame score desirability values predictor evaluated. values determined recipes::prep() called. removals character string contains names predictors removed. values determined recipes::prep() called. skip logical. step skipped recipe baked bake()? operations baked prep() run, operations may able conducted new data (e.g. processing outcome variable(s)). Care taken using skip = TRUE may affect computations subsequent operations. id character string unique step identify .","code":""},{"path":"https://important.tidymodels.org/dev/reference/step_predictor_retain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Supervised Feature Selection via A Single Filter — step_predictor_retain","text":"updated version recipe new step added sequence existing operations. tidy() step, tibble::tibble returned columns terms id: terms character, selectors variables selected removed id character, id step trained, additional columns included (see Details section).","code":""},{"path":"https://important.tidymodels.org/dev/reference/step_predictor_retain.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Supervised Feature Selection via A Single Filter — step_predictor_retain","text":"score valid R syntax produces logical result use external data. list variables can used section .","code":""},{"path":"https://important.tidymodels.org/dev/reference/step_predictor_retain.html","id":"scoring-functions","dir":"Reference","previous_headings":"","what":"Scoring Functions","title":"Supervised Feature Selection via A Single Filter — step_predictor_retain","text":"version 0.2.0 filtro package, following score functions available: aov_fstat (documentation) aov_pval (documentation) cor_pearson (documentation) cor_spearman (documentation) gain_ratio (documentation) imp_rf (documentation) imp_rf_conditional (documentation) imp_rf_oblique (documentation) info_gain (documentation) roc_auc (documentation) sym_uncert (documentation) xtab_pval_chisq (documentation) xtab_pval_fisher (documentation) important notes: Scores p-values automatically transformed filtro format -log10(pvalue) p-value 0.1 converted 1.0. , use maximize() goal. scores also transformed data. example, correlation scores given recipe step absolute value format. See filtro documentation score. can use -line functions using base R functions. example, maximize(max(score_cor_spearman)). predictor computed scores, given \"fallback value\" prevent excluded reason. step can potentially remove columns data set. may cause issues subsequent steps recipe missing columns specifically referenced name. avoid , see advice Tips saving recipes filtering columns section recipes::selections.","code":""},{"path":"https://important.tidymodels.org/dev/reference/step_predictor_retain.html","id":"case-weights","dir":"Reference","previous_headings":"","what":"Case Weights","title":"Supervised Feature Selection via A Single Filter — step_predictor_retain","text":"Case weights can used scoring functions. learn , load filtro package check case_weights property score object (see Examples ). recipe, use one tidymodels case weight functions hardhat::importance_weights() hardhat::frequency_weights, assign correct data type vector case weights. recipe interpret class case weight (role). full example .","code":""},{"path":"https://important.tidymodels.org/dev/reference/step_predictor_retain.html","id":"tidy-method","dir":"Reference","previous_headings":"","what":"Tidy method","title":"Supervised Feature Selection via A Single Filter — step_predictor_retain","text":"trained recipe, tidy() method return tibble columns terms (predictor names), id, columns estimated scores. score columns raw values, filled \"safe values\" transformed. additional local column called removed notes whether predictor failed filter removed step executed.","code":""},{"path":"https://important.tidymodels.org/dev/reference/step_predictor_retain.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Supervised Feature Selection via A Single Filter — step_predictor_retain","text":"","code":"library(recipes)  rec <- recipe(mpg ~ ., data = mtcars) |>   step_predictor_retain(     all_predictors(),     score = cor_pearson >= 0.75 | cor_spearman >= 0.75   )  prepped <- prep(rec)  bake(prepped, mtcars) #> # A tibble: 32 × 5 #>      cyl  disp    hp    wt   mpg #>    <dbl> <dbl> <dbl> <dbl> <dbl> #>  1     6  160    110  2.62  21   #>  2     6  160    110  2.88  21   #>  3     4  108     93  2.32  22.8 #>  4     6  258    110  3.22  21.4 #>  5     8  360    175  3.44  18.7 #>  6     6  225    105  3.46  18.1 #>  7     8  360    245  3.57  14.3 #>  8     4  147.    62  3.19  24.4 #>  9     4  141.    95  3.15  22.8 #> 10     6  168.   123  3.44  19.2 #> # ℹ 22 more rows  tidy(prepped, 1) #> # A tibble: 10 × 5 #>    terms removed cor_pearson cor_spearman id                     #>    <chr> <lgl>         <dbl>        <dbl> <chr>                  #>  1 cyl   FALSE        -0.852       -0.911 predictor_retain_NTIFr #>  2 disp  FALSE        -0.848       -0.909 predictor_retain_NTIFr #>  3 hp    FALSE        -0.776       -0.895 predictor_retain_NTIFr #>  4 drat  TRUE          0.681        0.651 predictor_retain_NTIFr #>  5 wt    FALSE        -0.868       -0.886 predictor_retain_NTIFr #>  6 qsec  TRUE          0.419        0.467 predictor_retain_NTIFr #>  7 vs    TRUE          0.664        0.707 predictor_retain_NTIFr #>  8 am    TRUE          0.600        0.562 predictor_retain_NTIFr #>  9 gear  TRUE          0.480        0.543 predictor_retain_NTIFr #> 10 carb  TRUE         -0.551       -0.657 predictor_retain_NTIFr"},{"path":[]},{"path":"https://important.tidymodels.org/dev/news/index.html","id":"important-020","dir":"Changelog","previous_headings":"","what":"important 0.2.0","title":"important 0.2.0","text":"CRAN release: 2025-09-05 Three recipe steps added supervised feature selection: step_predictor_retain() step_predictor_best() step_predictor_desirability() See individual help pages information.","code":""},{"path":"https://important.tidymodels.org/dev/news/index.html","id":"important-001","dir":"Changelog","previous_headings":"","what":"important 0.0.1","title":"important 0.0.1","text":"CRAN release: 2025-08-20 Initial CRAN submission.","code":""}]
